@model CatchMe.Models.user
@using helpers = CatchMe.Helpers

@{
    ViewBag.Title = "Add User";
    
    var roles = CatchMe.Helpers.SelectItems.RoleItemList();
}

<h2>Add User</h2>
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index")">Home</a></li>
    <li><a href="@Url.Action("ListUsers")">Users</a></li>
    <li class="active">Find and Add Users</li>
</ol>



@using (Html.BeginForm("AddUser","Admin",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>user</h4>
        <hr />



        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control typeahead", data_provider="typeahead" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.job_title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.job_title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.job_title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.team, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.team, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.team, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("role", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
            </div>
        </div>

  
        @*<div class="form-group">
            @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.is_active)
                    @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.active_project, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("project_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.active_project, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {


         


            $('.typeahead').typeahead({
                minLength: 3,
                dataType: 'json',
                //source: ['GIOLET - Amsterdam', 'ASAAAA - Amsterdam2', 'BBBBBB - Amsterdam3', 'Washington', 'Sydney', 'Beijing', 'Cairo']

                source: function (q) {
                    return $.get(getVirtualDir() + 'admin/finduser?q=' + q);               
                }



            });


            //$('.typeahead').typeahead({
            //    minLength: 4,
            //   source: function (q, cb) {
            //        return $.ajax({
            //            //dataType: 'json',
            //            type: 'get',                        
            //            url: getVirtualDir() + 'Admin/FindUser?q=' + q,
            //            chache: false,
            //            success: function (data) {
            //                var result = [];
            //                $.each(data, function (index, val) {
            //                    result.push({
            //                        value: val
            //                    });
            //                });
            //                cb(result);
            //            }
            //        });
            //    }

            //});



            //$('.typeahead').typeahead({
            //    hint: true,
            //    highlight: true,
            //    minLength: 3,
            //    limit: 8
            //}, {
            //    source: function (q, cb) {
            //        return $.ajax({
            //            dataType: 'json',
            //            type: 'get',
            //            url: getVirtualDir() + 'Admin/FindUser?q=' + q,
            //            chache: false,
            //            success: function (data) {
            //                var result = [];
            //                $.each(data, function (index, val) {
            //                    result.push({
            //                        value: val
            //                    });
            //                });
            //                cb(result);
            //            }
            //        });
            //    }

            //});




        });


        function getVirtualDir() {
            var path = $('#svrpath').val();
            return path;
        }

    </script>
    

}
