@model CatchMe.Models.user

@{
    ViewBag.Title = "Edit User";
    //List<CatchMe.Models.project> projs = ViewBag.NewProjects as List<CatchMe.Models.project>;
}

<h2>Edit User > <strong>@Model.firstname @Model.lastname</strong></h2>
<ol class="breadcrumb">
    <li><a href="@Url.Action("Index")">Home</a></li>
    <li><a href="@Url.Action("ListUsers")">Users</a></li>
    <li class="active">Edit User > <strong>@Model.firstname @Model.lastname</strong></li>
</ol>


  <!-- Nav tabs -->
<ul class="nav nav-tabs" role="tablist">
    <li role="presentation"  class="active"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Profile</a></li>
    <li role="presentation"><a href="#projects" aria-controls="projects" role="tab" data-toggle="tab">User Projects</a></li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="profile">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>user</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.user_id)

                <div class="form-group">
                    @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.job_title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.job_title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.job_title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.team, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.team, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.team, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("role", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.num_logins, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.num_logins, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.num_logins, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.is_active)
                            @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.active_project, "active_project", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("active_project", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.active_project, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-5">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>
    <div role="tabpanel" class="tab-pane" id="projects">
        <table class="table table-striped">
            <tr>
                <th>
                    project
                </th>
                <th>
                    Status
                </th>
                <th>
                    Remove
                </th>
            </tr>
            @foreach(var p in Model.projects)
            {
                <tr>
                    <td>
                    @p.project_id - @p.name

                    </td>
                    <td>
                    
                    @if(Model.active_project!= null)
                    {
                        @(p.project_id == @Model.active_project.Value ?"Active":"Member")
                        
                    }
                    
                    

                    </td>
                    <td>
                        @if(p.project_id != Model.active_project)
                        {
                        <a href="@Url.Action("RemoveUserFromProject", new { user_id = Model.user_id, project_id = p.project_id, fromuser = true})">Remove</a>

                        } else
                        {
                            <p>cannot remove active project</p>
                        }
                    </td>
                </tr>

                <tr>
                </tr>
                <tr>
                    
                </tr>
            }
        </table>


        <br /><br />
            @using (Html.BeginForm("AddUserToProject", "Admin", FormMethod.Post, new { @class = "form-inline" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="user_id" value="@Model.user_id" />
                <input type="hidden" name="fromuser" value="true" />
                <div class="form-group">

                    <div class="input-group select2-bootstrap-prepend">
                        <span class="input-group-addon">
                            <span class="fa fa-user-plus"></span>

                        </span>

                        @Html.DropDownList("project_id", null, new { @class = "select2" })
                    </div>



                    @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-link"><span style="color:#0c0;font-size:1.3em" class="fa fa-check-circle"></span></button>
            }



    </div>
</div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
