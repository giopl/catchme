@model CatchMe.Models.information
@using session = CatchMe.Helpers.UserSession
@using appenums = CatchMe.Helpers.AppEnums


@{
    ViewBag.Title = "Show Info";
    
    
    var color  = Model.importance == 1 ? "#5BC0DE" : (Model.importance == 2? "#ffd800": ( Model.importance == 3 ? "#D9534F": "#b200ff" )  );
    
          
}

<h2 class="text-info"><span class="fa fa-info-circle"></span>&nbsp;@Model.title</h2>

<h4 class="text-primary" style="margin-left:4%">@Model.project.name<br /><small class="text-muted">@Model.project.description</small></h4>



    <div class="text-right" style="margin-top:-50px;"><small class="text-muted">Created by @Model.user.firstname on @Model.created_on <br /> Last updated by @Model.user1.firstname on @Model.updated_on</small></div>



<a href="#" style="margin-left:4%" class="shownextsection"><small>&nbsp;<span class="fa fa-plus"></span> attachment</small></a>
<section style="display:none">
    <div class="row">

        <hr />
        @*     @using (Html.BeginForm("UploadFile", "Tasks", FormMethod.Post, new { @class = "form-horizontal" }))*@
        @using (Html.BeginForm("UploadFile", "Tasks", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="taskId" value="-1" />
            <input type="hidden" name="projectId" value="@Model.project_id" />
            <input type="hidden" name="comment_id" value="-1" />
            <input type="hidden" name="information_id" value="@Model.information_id" />
            <div class="row">
                <div class="col-md-offset-1 col-md-4">
                    <input type="file" required name="file" />

                </div>
                <div class="col-md-4">
                    <input type="submit" class="btn btn-info" value="Attach" />

                </div>
            </div>
            <div class="row">
                <div class="col-md-offset-1 col-md-8">
                    <small class="text-muted">Files accepted: excel, word, powerpoint, text, jpeg, png</small>
                </div>
            </div>

        }
        <hr />
    </div>

</section>
        
@if(Model.attachments.Count >0)
{    
@:&nbsp;|&nbsp;<a href="#" class="shownextsection"><small><span class="fa fa-paperclip"></span> Attachments(@Model.attachments.Count) </small></a>
}
<section style="display:none">
    <hr />
    @foreach (var att in Model.attachments)
    {
        <div style="margin-left:4%">
        
                <a href="@Url.Content(string.Format("~/uploads/{0}", att.filepath))" target="_blank"><span class="fa fa-@(att.icon)"></span> @att.filename (@att.size)</a>
                &nbsp;@if (session.Current.UserId == att.user_id || session.Current.IsAdmin)
                {
                    <a href="@Url.Action("DeleteAttachment",new { id = att.attachment_id, taskid = -1, information_id = Model.information_id})" onclick="return confirm('Are you sure?')"><span class="fa fa-trash"></span></a>
                }

        </div>
        

    }
    <hr />
</section>



<hr>

<br />
<div style="background:#EEE;color:#555;padding:20px;border-left:20px solid @color;font-size:1.4em">
  @Html.Raw(Model.description)
</div>

<a href="#" class="shownextsection">Edit</a>

<section style="display:none">

    @using (Html.BeginForm("EditInfo", "Tasks", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()


        <h4>information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.information_id)
        @Html.HiddenFor(model => model.project_id)
        @Html.HiddenFor(model => model.created_on)
        @Html.HiddenFor(model => model.created_by)
        @Html.HiddenFor(model => model.state)

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @*@Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })*@
                <textarea name="description" class="tinymce" cols="20" rows="2"  placeholder="comment">@Model.description</textarea>

                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.importance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("importance", null, new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.importance, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-5">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>

    }
</section>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/nicedit")*@


<script src="@Url.Content("~/Scripts/plugins/tinymce/tinymce.min.js")"></script>



    <script>

        $(document).ready(function () {

            $('[data-toggle="tooltip"]').tooltip();

            $('.chosen-select').chosen(
                {
                    width:'20%'
                });

            tinymce.init({
                selector: '.tinymce',
                plugins: "textcolor table code advlist emoticons charmap hr image link",
                toolbar: "bold italic underline forecolor backcolor table strikethrough  code emoticons bullist numlist  link"
            });



            $('body').on('click', '.shownextsection', function () {

                $(this).next('section').toggle();
            });

            

            bkLib.onDomLoaded(function () {

                //nicEditors.allTextAreas();
                new nicEditor({
                    //  fullPanel: true,
                    buttonList: ['fontSize', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'subscript', 'superscript', 'strikethrough', 'removeformat', 'indent', 'outdent', 'hr', 'forecolor', 'bgcolor']
                }).panelInstance('area2');
                //nicEditors.findEditor('myArea2');
            });


            
            $('body').on('click', '#closeAddComment', function () {
                $('#savestatusbutton').prop('disabled', false);
                $('#infosave').hide();
                $(this).closest('section').hide();
            });



        });
    </script>
}
