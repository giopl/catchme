@model CatchMe.Models.comment

@{
    ViewBag.Title = "_EditComment";
}



@using (Html.BeginForm("EditComment","Tasks",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Comment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.comment_id)
        @Html.HiddenFor(model => model.task_id)
        @Html.HiddenFor(model => model.user_id)
        @Html.HiddenFor(model => model.is_disabled)
        @Html.HiddenFor(model => model.created_on)

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextAreaFor(model => model.description, new { @class = "form-control", @id="area2" } )*@
                <textarea class="tinymce" name="description" id="area2" cols="20" rows="2" style="width:620px;height:200px" placeholder="comment">@Model.description</textarea>

                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

    <a href="@Url.Action("DeleteComment","Tasks", new { id=Model.comment_id, taskid=Model.task_id})" onclick="return confirm('Are you sure?')"><span class="fa fa-trash-o"></span>&nbsp; Delete </a>
}
