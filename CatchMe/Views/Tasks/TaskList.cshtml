@model IEnumerable<CatchMe.Models.task>

@using session = CatchMe.Helpers.UserSession
@using appenums = CatchMe.Helpers.AppEnums

@{
    
    
    ViewBag.Title = "Catch Me";

    var countopen = Model.Where(x => x.status != 9).Count();
    var countme = Model.Where(x => x.assigned_to == session.Current.UserId && x.status != 9).Count();
    //var countme = Model.Where(x => (x.assigned_to == session.Current.UserId && x.owner != session.Current.UserId && x.status != 9 && x.status != 3 && x.status != 7) || x.owner == session.Current.UserId && (x.status == 7 || x.status == 3)).Count();
    var countclosed = Model.Where(x => x.status == 9).Count();
    var countopenbyme = Model.Where(x => x.owner == session.Current.UserId && x.status != 9).Count();
    var countsearched= Model.Where(x => x.IsFilteredOn).Count();

    var latest10 = Model.Where(x=>x.LastUpdatedSince!="" ).OrderByDescending(x => x.updated_on).Take(15).ToList();

    CatchMe.Models.ViewModel.SearchFilter searchFilter = session.Current.searchFilter;
    if (searchFilter  == null)
    {
        searchFilter = new CatchMe.Models.ViewModel.SearchFilter();
    }

    var countnotifications = Model.Where(x => x.isInNotificationList).Count();

    var countinfos = 0;
    var infoitems = new List<CatchMe.Models.information>();
    if(Model.Count() >0)
    {
        countinfos = Model.FirstOrDefault().project.information.Count ;
        infoitems = Model.FirstOrDefault().project.information.ToList();
        
    }
    
    
    
}
<style>
.highlight {
    background-color: yellow;
}    
</style>

<div>
    <div class="pull-left">
        <div class="project-title">@session.Current.CurrentProject</div>
        @if (Model.Count() > 0)
        {
            <small class="text-muted">@Model.FirstOrDefault().project.description</small>
        }
    </div>        
    <div class="pull-right" style="margin-top:20px;">
        @if (session.Current.MyProjects != null && session.Current.MyProjects.Count() > 1)
        {
        <span class="text-muted">change project:&nbsp;&nbsp;</span>
            @Html.DropDownList("project_id", null, htmlAttributes: new { @class = "projectselect pull-right changeproject" })
        }
    </div>
</div>
<div style="clear:both"></div>

<style>
table.fixed { table-layout:fixed; }    
table.fixed td { overflow: hidden; }
.chosen-select-multi { width:300px; }
</style>


<div class="gap"></div>

@*<a href="#" class="shownextsection"><small>Advanced Search</small></a>*@

<section style="display:none">
    @Html.Partial("_searchFilter", searchFilter)
</section>
    

<div>

    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        @if (countme > 0)
        {
            <li role="presentation" class="active assignedcolor"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Assigned To Me (@countme)</a></li>
        }
        <li role="presentation" class="@(countme>0?"":"active") opencolor"><a href="#open" aria-controls="settings"  role="tab" data-toggle="tab">Open (@countopen)</a></li>

        @if(countclosed>0)
        {
                    <li role="presentation" class="closecolor"><a href="#closed" aria-controls="closed" role="tab" data-toggle="tab">Closed (@countclosed)</a></li>
        }
        @if(countopenbyme>0)
        {
            <li role="presentation" class="ownedcolor"><a href="#openbyme" aria-controls="openbyme" role="tab" data-toggle="tab">Owned By Me (@countopenbyme)</a></li>
        }
        @if (latest10.Count>0)
        {
            <li role="presentation" class="recentcolor"><a href="#recent" aria-controls="recent" role="tab" data-toggle="tab">Recent updates (@latest10.Count())</a></li>
        }
        
        @if (countsearched > 0)
        {
            <li role="presentation" class="searchedcolor"><a href="#searched" aria-controls="messages" role="tab" data-toggle="tab"><b><span class="fa fa-files-o"></span> Searched</b> (@countsearched)</a></li>
        }
        @if (countnotifications > 0)
        {
            <li role="presentation" class="notifiedcolor"><a href="#notified" aria-controls="notified" role="tab" data-toggle="tab"> <span class="fa fa-envelope"></span> Received (@countnotifications)</a></li>

        }

        @if (countinfos > 0)
        {
            <li role="presentation" class="infocolor"><a href="#info" aria-controls="info" role="tab" data-toggle="tab"> <span class="fa fa-info-circle"></span> informational (@countinfos)</a></li>

        }


    </ul>

    <!-- Tab panes -->
    <div class="tab-content">

        <div role="tabpanel" class="tab-pane @(countme > 0?"active":"" )" id="home">

            <div class="gap"></div>


            <table class="table table-striped" id="tableme" style="width:100%">
                <thead>
                    <tr>
                        <th width="5%">
                            Id
                        </th>
                        <td></td>

                        <td width="45%">
                            Title
                        </td>

                        <th width="20%">
                            Assigned
                        </th>
                        <td></td>
                        <th width="10%">
                            @Html.DisplayNameFor(model => model.priority)
                        </th>
                        <th width="14%">
                            Due on
                        </th>

                        
                        <td></td>
                    </tr>
                </thead>

                <tbody>
                    
                    @*@foreach (var item in Model.Where(x => (x.assigned_to == session.Current.UserId && x.owner != session.Current.UserId && x.status != 9 && x.status != 3 && x.status != 7) || x.owner == session.Current.UserId && (x.status == 7 || x.status == 3)).OrderBy(x=>x.priority))*@
                    @foreach (var item in Model.Where(x => x.assigned_to == session.Current.UserId && x.status != 9))
                    {
                        <tr>
                            <td>
                                <span class="text-muted fa-15x">@item.task_id</span>
                            </td>
                            <td>
                                <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                            </td>
                            <td class="">
                                <div class="readmore">
                                    <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                </div>

                            </td>
                            <td>
                                @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                @assignee
                            </td>
                            <td><span class="color-white">@item.priority</span></td>
                            <td>
                                <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                            </td>
                            <td class="@(item.IsOverdue?"red":"")">

                                @Html.DisplayFor(modelItem => item.due_date)
                            </td>

                          
                            <td>
                                <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                            </td>
                        </tr>
                                    }
                </tbody>
            </table>

        </div>

        <div role="tabpanel" class="tab-pane @(countme > 0?"":"active" )" id="open">

            <div class="gap"></div>


            <table class="table" id="tableopen" style="width:100%">
                
                <thead>
                    <tr>
                        <th width="5%">
                            Id
                        </th>
                        <td></td>

                        <td width="45%">
                            Desc
                            </td>

                        <th width="20%">
                            Assigned
                            </th>
                        <th width="10%">
                            @Html.DisplayNameFor(model => model.priority)
                        </th>
                        <th width="14%">
                            Due On
                        </th>
                        <td></td>

                        <th width="1%"></th>
                        <td></td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.Where(x => x.status != 9))
                    {
                        <tr>
                            <td>
                                <span class="text-muted fa-15x">@item.task_id</span>
                            </td>
                            <td>
                                <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                            </td>

                            <td >
                                <div class="readmore">                                  
                                    <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                </div>

                            </td>
                            <td>
                                @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                @assignee
                            </td>
                            <td>
                                <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                            </td>
                            <td class="@(item.IsOverdue?"red":"")">
                                @Html.DisplayFor(modelItem => item.due_date)
                            </td>
                            <td>@Html.Raw(item.OpenSince)</td>
                            <td>
                                @*<a href="@Url.Action("EditTask", new {  id = item.task_id})"><span class="fa fa-edit"></span> </a>*@
                                <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>

                            </td>
                            <td>
                                <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>        
      
        <div role="tabpanel" class="tab-pane" id="closed">
            <div class="gap"></div>
            <table class="table" id="tableclose" style="width:100%">

                <thead>
                    <tr>
                        <th width="5%">
                            Id
                        </th>
                        <td></td>

                        <td width="45%">
                            Title
                        </td>
                        <td>
                        <th>Opened</th>
                        <th width="20%">
                            Assigned
                        </th>
                        
                        <th width="14%">
                            Due On
                        </th>

                        <th></th>
                        <th width="1%"></th>
                        <td></td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.Where(x => x.status == 9))
                    {
                        <tr>
                            <td>
                                <span class="text-muted fa-15x">@item.task_id</span>
                            </td>
                            <td>
                                <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                            </td>

                            <td>
                                <div class="readmore">
                                    <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                </div>

                            </td>
                            <td><span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp;</td>
                            
                            <td>@item.user1.firstname</td>
                            <td>
                                @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                @assignee
                            </td>
                            
                            <td>
                                @Html.DisplayFor(modelItem => item.due_date)
                            </td>
                            <td>@*@Html.Raw(item.TimeTaken)*@</td>
                            <td>
                                @*<a href="@Url.Action("EditTask", new {  id = item.task_id})"><span class="fa fa-edit"></span> </a>*@
                                @*<a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>*@

                            </td>
                            <td>
                                <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="openbyme">

            <div class="gap"></div>


            <table class="table" id="tableopenbyme" style="width:100%">

                <thead>
                    <tr>
                        <th width="5%">
                            Id
                        </th>
                        <td></td>

                        <td width="45%">
                            Title
                        </td>

                        <th width="20%">
                            Assigned
                        </th>
                        <th width="10%">
                            @Html.DisplayNameFor(model => model.priority)
                        </th>
                        <th width="14%">
                            Due On
                        </th>

                        <th width="1%"></th>
                        <td></td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.Where(x => x.owner == session.Current.UserId && x.status != 9  ))
                    {
                        <tr>
                            <td>
                                <span class="text-muted fa-15x">@item.task_id</span>
                            </td>
                            <td>
                                <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                            </td>

                            <td>
                                <div class="readmore">
                                    <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                </div>

                            </td>
                            <td>
                                @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                @assignee
                            </td>
                            <td>
                                <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                            </td>
                            <td class="@(item.IsOverdue?"red":"")">
                                @Html.DisplayFor(modelItem => item.due_date)
                            </td>

                            <td>
                                @*<a href="@Url.Action("EditTask", new {  id = item.task_id})"><span class="fa fa-edit"></span> </a>*@
                                <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>

                            </td>
                            <td>
                                <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

        <div role="tabpanel" class="tab-pane" id="recent">

            <div class="gap"></div>


            <table class="table" id="tablerecent" style="width:100%">

                <thead>
                    <tr>
                        <th width="5%">
                            Id
                        </th>
                        <td></td>

                        <td width="45%">
                            Title
                        </td>

                        <th width="10%">
                            Assigned
                        </th>
                        <th width="10%">
                            Updated By
                        </th>
                        <th width="10%">
                            @Html.DisplayNameFor(model => model.priority)
                        </th>
                        <th>Updated</th>
                        <th width="14%">
                            Due On
                        </th>

                        <th width="1%"></th>
                        <td></td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in latest10)
                    {
                        <tr>
                            <td>
                                <span class="text-muted fa-15x">@item.task_id</span>
                            </td>
                            <td>
                                <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                            </td>

                            <td>
                                <div class="readmore">
                                    <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                </div>

                            </td>
                            <td>
                                @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                @assignee
                            </td>
                            <td>@item.user2.firstname</td>
                            <td>
                                <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                            </td>
                            <td>@Html.Raw(item.LastUpdatedSince)</td>
                            <td class="@(item.IsOverdue?"red":"")">
                                @Html.DisplayFor(modelItem => item.due_date)
                            </td>

                            <td>
                                @*<a href="@Url.Action("EditTask", new {  id = item.task_id})"><span class="fa fa-edit"></span> </a>*@
                                <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>

                            </td>
                            <td>
                                <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                            </td>
                        </tr>
                                    }
                </tbody>
            </table>

        </div>

        <div role="tabpanel" class="tab-pane" id="searched">

            <div class="gap"></div>
            @if(session.Current.searchFilter != null)
            { 
            @:&nbsp;&nbsp;Keyword: <b>@session.Current.searchFilter.keywords</b> (<a href="@Url.Action("ClearFilter")">clear</a>)
            }
            
            <div id="searchtext">
                <table class="table" id="tablesearched" style="width:100%">

                    <thead>
                        <tr>
                            <th width="5%">
                                Id
                            </th>
                            <td></td>

                            <td width="45%">
                                Desc
                            </td>

                            <th width="20%">
                                Assigned
                            </th>
                            <th width="10%">
                                @Html.DisplayNameFor(model => model.priority)
                            </th>
                            <th width="14%">
                                Due On
                            </th>

                            <th width="1%"></th>
                            <td></td>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Where(x => x.IsFilteredOn).ToList())
                        {
                            <tr>
                                <td>
                                    <span class="text-muted fa-15x">@item.task_id</span>
                                </td>
                                <td>
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                </td>

                                <td>
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>
                                <td>
                                    @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                    @assignee
                                </td>
                                <td>
                                    <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                                </td>
                                <td class="@(item.IsOverdue?"red":"")">
                                    @Html.DisplayFor(modelItem => item.due_date)
                                </td>

                                <td>
                                    @*<a href="@Url.Action("EditTask", new {  id = item.task_id})"><span class="fa fa-edit"></span> </a>*@
                                    <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>

                                </td>
                                <td>
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>

        <div role="tabpanel" class="tab-pane" id="notified">
            <div class="gap"></div>
            <table class="table" id="tablenotification" style="width:100%">

                <thead>
                    <tr>
                        <th width="5%">
                            Id
                        </th>
                        <td></td>

                        <td width="45%">
                            Title
                        </td>
                        <td>
                            <th width="20%">From</th>
                        <th width="20%">
                            Assigned
                        </th>

                        <th width="14%">
                            Due On
                        </th>

                        <th></th>
                        <th width="1%"></th>
                        <td></td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.Where(x => x.isInNotificationList).OrderByDescending(x => x.updated_on))
                    {
                        <tr>
                            <td>
                                <span class="text-muted fa-15x">@item.task_id</span>
                            </td>
                            <td>
                                <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                            </td>

                            <td>
                                <div class="readmore">
                                    <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                </div>

                            </td>
                            <td><span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp;</td>

                            <td>
                            @if(item.notifications.Count>0)
                            {                                
                                @item.notifications.OrderByDescending(x=>x.sent_on).FirstOrDefault().sender_firstname
                            }
                            </td>
                            <td>
                                @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                @assignee
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.due_date)
                            </td>
                            <td>@*@Html.Raw(item.TimeTaken)*@</td>
                            <td>
                                @*<a href="@Url.Action("EditTask", new {  id = item.task_id})"><span class="fa fa-edit"></span> </a>*@
                                @*<a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>*@

                            </td>
                            <td>
                                <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="info">
            <div class="gap"></div>
            <table class="table" id="tableinfo" style="width:100%">

                <thead>
                    <tr>
                        <th>
                            Id
                        </th>
                        
                        <th width="45%">
                            Title
                        </th>
                        
                        <th>
                            Opened on
                        </th>
                        
                        <th>Updated by</th>
                        <th>Updated on</th>
                        <th>Importance</th>
                        
                        <td></td>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in infoitems.OrderBy(i=>i.importance))
                    {
                        <tr>
                            <td>
                                <span class="text-muted fa-15x">@item.information_id</span>
                            </td>
                            <td>
                                <span class="fa fa-15x fa-info-circle color-@item.ImportanceDesc.ToLower()"></span> <a href="@Url.Action("ShowInfo", new { id = item.information_id })">@item.title</a> 
                            </td>
                            <td>@item.created_on.Value.ToString("dd MMM yyyy HH:mm") </td>

                            <td>@item.user.firstname</td>
                            
                            <td>@item.updated_on.Value.ToString("dd MMM yyyy HH:mm")</td>

                            <td><span class="fa fa-circle color-@item.ImportanceDesc.ToLower()"></span>&nbsp; @item.ImportanceDesc</td>
                            
                            <td>
                                <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                            </td>
                            
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        
    </div>

</div>





@section scripts {
 
    

    @*@Scripts.Render("~/bundles/datatables")*@

    <script src="@Url.Content("~/Scripts/plugins/datatables.min.js")"></script> 

    <script>
        $(document).ready(function () {


            //$('td').highlight('MTP');


            $('#tableopen').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });

            $('#tableclose').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });


            $('#tableme').DataTable({
                "pageLength": 50,
                "order": [[4, "desc"]]
            });


            $('#tableopenbyme').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });


            //});

            $('.chosen-select-multi').chosen({ width: "95%" });


            $('body').on('change', '.changeproject', function () {
                var project_id = $(this).val();
                //alert("Changing Project");


                // similar behavior as an HTTP redirect
                window.location.replace(getVirtualDir() + "Tasks/Tasklist/" + project_id);

                // similar behavior as clicking on a link
                //window.location.href = "http://stackoverflow.com";

            });

            $('[data-toggle="tooltip"]').tooltip();





            //$('.readmore').readmore({
            //    speed: 75,
            //    collapsedHeight: 40,
            //    lessLink: '<a href="#">Read less</a>'
            //});

            $('body').on('click', '.shownextsection', function () {

                $(this).next('section').toggle();
            });

            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                clearBtn: true
            })



        });
            </script>

    
        }

    

