@model IEnumerable<CatchMe.Models.task>

@using session = CatchMe.Helpers.UserSession
@using appenums = CatchMe.Helpers.AppEnums


@{
    session.count++;

    ViewBag.Title = "Catch Me";

    var isBusiness = session.Current.IsBusiness;

    var countopen = Model.Where(x => x.status != 9).Count();
    var countme = Model.Where(x => x.assigned_to == session.Current.UserId && x.status != 9).Count();
    //var countme = Model.Where(x => (x.assigned_to == session.Current.UserId && x.owner != session.Current.UserId && x.status != 9 && x.status != 3 && x.status != 7) || x.owner == session.Current.UserId && (x.status == 7 || x.status == 3)).Count();
    var countclosed = Model.Where(x => x.status == 9).Count();
    var countopenbyme = Model.Where(x => x.owner == session.Current.UserId && x.status != 9).Count();
    var countsearched= Model.Where(x => x.IsFilteredOn).Count();

    var latest10 = Model.Where(x=>x.LastUpdatedSince!="" ).OrderByDescending(x => x.updated_on).Take(15).ToList();

    CatchMe.Models.ViewModel.SearchFilter searchFilter = session.Current.searchFilter;
    if (searchFilter  == null)
    {
        searchFilter = new CatchMe.Models.ViewModel.SearchFilter();
    }

    var countnotifications = Model.Where(x => x.isInNotificationList).Count();

    var countinfos = 0;
    var infoitems = new List<CatchMe.Models.information>();
    if(Model.Count() >0)
    {
        countinfos = Model.FirstOrDefault().project.information.Count ;
        infoitems = Model.FirstOrDefault().project.information.ToList();

    }

    var tab = session.Current.Tab;

}
<style>
.highlight {
    background-color: yellow;
}   
.title-col {
    min-width:33%;
}

</style>

@*<h1>@tab.ToString()</h1>*@
@*<a href="#" class="notify">show notification @session.count</a>
<a href="#" class="sendtestnotif">show notification @session.count</a>*@

<div>
    <div class="pull-left">
        <div class="project-title">@session.Current.CurrentProject</div>
        @if (Model.Count() > 0)
        {
            <small class="text-muted">@Model.FirstOrDefault().project.description</small>
        }
    </div>        
    <div class="pull-right" style="margin-top:20px;">
        @if (session.Current.MyProjects != null && session.Current.MyProjects.Count() > 1)
        {
        <span class="text-muted">change project:&nbsp;&nbsp;</span>
            @Html.DropDownList("project_id", null, htmlAttributes: new { @class = "projectselect pull-right changeproject" })
        }
    </div>
</div>
<div style="clear:both"></div>

<style>
table.fixed { table-layout:fixed; }    
table.fixed td { overflow: hidden; }
.chosen-select-multi { width:300px; }
</style>


<div class="gap"></div>

@*<a href="#" class="shownextsection"><small>Advanced Search</small></a>*@

<section style="display:none">
    @Html.Partial("_searchFilter", searchFilter)
</section>
    

<div>

    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">

        @if (isBusiness)
        {

            <li role="presentation" class="active assignedcolor"><a href="#businessopen" aria-controls="businessopen" role="tab" data-toggle="tab">Open (@countopen)</a></li>
            <li role="presentation" class="closecolor"><a href="#businessclosed" aria-controls="businessclosed" role="tab" data-toggle="tab">Closed (@countclosed)</a></li>
        }
        else
        {

            if (countme > 0)
            {
                @*<li role="presentation" class="@(tab==CatchMe.Helpers.AppEnums.TabEnum.Me?"":"active") assignedcolor"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Assigned To Me (@countme)</a></li>*@
                <li role="presentation" class="assignedcolor"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Assigned To Me (@countme)</a></li>
            }
            @*<li role="presentation" class="@(tab==CatchMe.Helpers.AppEnums.TabEnum.Open?"":"active") opencolor"><a href="#open" aria-controls="settings" role="tab" data-toggle="tab">Open (@countopen)</a></li>*@
            <li role="presentation" class="active opencolor"><a href="#open" aria-controls="settings" role="tab" data-toggle="tab">Open (@countopen)</a></li>

            if (countclosed > 0)
            {
                @*<li role="presentation" class="@(tab==CatchMe.Helpers.AppEnums.TabEnum.Closed?"":"active") closecolor"><a href="#closed" aria-controls="closed" role="tab" data-toggle="tab">Closed (@countclosed)</a></li>*@
                <li role="presentation" class="closecolor"><a href="#closed" aria-controls="closed" role="tab" data-toggle="tab">Closed (@countclosed)</a></li>
            }
            if (countopenbyme > 0)
            {
                @*<li role="presentation" class="ownedcolor"><a href="#openbyme" aria-controls="openbyme" role="tab" data-toggle="tab">Owned By Me (@countopenbyme)</a></li>*@
            }
            if (latest10.Count > 0)
            {
                @*<li role="presentation" class="recentcolor"><a href="#recent" aria-controls="recent" role="tab" data-toggle="tab">Recent updates (@latest10.Count())</a></li>*@
            }

            if (countsearched > 0)
            {
                @*<li role="presentation" class="@(tab==CatchMe.Helpers.AppEnums.TabEnum.Searched?"":"active") searchedcolor"><a href="#searched" aria-controls="messages" role="tab" data-toggle="tab"><b><span class="fa fa-files-o"></span> Searched</b> (@countsearched)</a></li>*@
                <li role="presentation" class="searchedcolor"><a href="#searched" aria-controls="messages" role="tab" data-toggle="tab"><b><span class="fa fa-files-o"></span> Searched</b> (@countsearched)</a></li>
            }
            if (countnotifications > 0)
            {
                @*<li role="presentation" class="notifiedcolor"><a href="#notified" aria-controls="notified" role="tab" data-toggle="tab"> <span class="fa fa-envelope"></span> Received (@countnotifications)</a></li>*@

            }

            if (countinfos > 0)
            {
                @*<li role="presentation" class="infocolor"><a href="#info" aria-controls="info" role="tab" data-toggle="tab"> <span class="fa fa-info-circle"></span> informational (@countinfos)</a></li>*@

            }

        }

        

        


    </ul>

    <!-- Tab panes -->
    <div class="tab-content">

        @if (isBusiness)
        {

            <div role="tabpanel" class="tab-pane active" id="businessopen">

                <div class="gap"></div>


                <table class="table table-striped" id="tablebusinessopen" style="width:100%">
                    <thead>
                        <tr>
                            <th width="5%">Id</th>
                            <th></th>
                            <th width="45%">Title</th>
                            <th>Assigned</th>
                            <th>Owner</th>
                            <th width="10%">
                                @Html.DisplayNameFor(model => model.priority)
                            </th>
                            <th>
                                Requested by
                            </th>
                            <th>Status</th>



                            
                        </tr>
                    </thead>

                    <tbody>

                        @*@foreach (var item in Model.Where(x => (x.assigned_to == session.Current.UserId && x.owner != session.Current.UserId && x.status != 9 && x.status != 3 && x.status != 7) || x.owner == session.Current.UserId && (x.status == 7 || x.status == 3)).OrderBy(x=>x.priority))*@
                        @foreach (var item in Model.Where(x=>x.status !=9))
                        {
                            <tr>
                                <td style="width:20px">
                                    <span class="text-muted fa-15x">@item.task_id</span>
                                </td>
                                <td style="width:20px">
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                </td>
                                <td class="">
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>
                                <td>@item.user.firstname</td>
                                <td>@item.user1.firstname</td>

                                <td data-order="@item.priority">
                                    <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                                </td>

                                <td>@item.initiator</td>

                                <td><small><label class="label label-@item.StatusDescLabel">@item.StatusDesc</label></small></td>
                                
                            </tr>
                        }
                    </tbody>
                </table>

            </div>


    <div role="tabpanel" class="tab-pane" id="businessclosed">

        <div class="gap"></div>


        <table class="table table-striped" id="tablebusinessclosed" style="width:100%">
            <thead>
                <tr>
                    <th width="5%">Id</th>
                    <th></th>
                    <th width="45%">Title</th>
                    <th>Assigned</th>
                    <th>Owner</th>
                    <th width="10%">
                        @Html.DisplayNameFor(model => model.priority)
                    </th>
                    <th>
                        Requested by
                    </th>
                    <th>Status</th>




                </tr>
            </thead>

            <tbody>

                @*@foreach (var item in Model.Where(x => (x.assigned_to == session.Current.UserId && x.owner != session.Current.UserId && x.status != 9 && x.status != 3 && x.status != 7) || x.owner == session.Current.UserId && (x.status == 7 || x.status == 3)).OrderBy(x=>x.priority))*@
                @foreach (var item in Model.Where(x=>x.status == 9))
                {
                    <tr>
                        <td style="width:20px">
                            <span class="text-muted fa-15x">@item.task_id</span>
                        </td>
                        <td style="width:20px">
                            <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                        </td>
                        <td class="">
                            <div class="readmore">
                                <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                            </div>

                        </td>
                        <td>@item.user.firstname</td>
                        <td>@item.user1.firstname</td>

                        <td data-order="@item.priority">
                            <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                        </td>

                        <td>@item.initiator</td>

                        <td><small><label class="label label-@item.StatusDescLabel">@item.StatusDesc</label></small></td>

                    </tr>
                }
            </tbody>
        </table>

    </div>
        }
        else
        {


            <div role="tabpanel" class="tab-pane" id="home">

                <div class="gap"></div>


                <table class="table table-striped" id="tableme" style="width:100%">
                    <thead>
                        <tr>
                            <th width="5%">Id</th>
                            <th></th>
                            <th width="45%">Title</th>
                            <th>Assigned</th>
                            <th>Owner</th>
                            <th width="10%">
                                @Html.DisplayNameFor(model => model.priority)
                            </th>



                            @if (!isBusiness)
                            {
                                <th width="14%">
                                    Due on
                                </th>
                            }



                            <td><span class="fa fa-paperclip"></span></td>
                        </tr>
                    </thead>

                    <tbody>

                        @*@foreach (var item in Model.Where(x => (x.assigned_to == session.Current.UserId && x.owner != session.Current.UserId && x.status != 9 && x.status != 3 && x.status != 7) || x.owner == session.Current.UserId && (x.status == 7 || x.status == 3)).OrderBy(x=>x.priority))*@
                        @foreach (var item in Model.Where(x => x.assigned_to == session.Current.UserId && x.status != 9))
                        {
                            <tr>
                                <td style="width:20px">
                                    <span class="text-muted fa-15x">@item.task_id</span>
                                </td>
                                <td style="width:20px">
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                </td>
                                <td class="">
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>
                                <td>@item.user.firstname</td>
                                <td>@item.user1.firstname</td>

                                <td data-order="@item.priority">
                                    <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                                </td>


                                @if (!isBusiness)
                                {
                                    <td class="@(item.IsOverdue?"red":"")">
                                        @Html.DisplayFor(modelItem => item.due_date)
                                    </td>
                                }

                                <td data-order="@(item.HasAttachment?1:0)">
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>

            <div role="tabpanel" class="tab-pane active" id="open">

                <div class="gap"></div>


                <table class="table table-responsive table-condensed table-striped" id="tableopen" data-column-defs='[{"sortable": false, "targets": [1,8]}]' style="width:100%">

                    <thead>
                        <tr>
                            <th width="20px">
                                Id
                            </th>
                            <td width="20px"></td>
                            <th class="title-col">Title</th>
                            <th>Assigned</th>
                            <th>
                                @Html.DisplayNameFor(model => model.priority)
                            </th>
                            <th>Status</th>
                            @if (!isBusiness)
                            {
                                <th width="14%">Due On</th>
                                <td>Since</td>
                            }



                            <th><span class="fa fa-paperclip"></span></th>
                            <td><span class="fa fa-trash"></span></td>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Where(x => x.status != 9))
                        {
                            <tr>
                                <td data-order="@item.task_id">
                                    <span class="text-muted fa-15x">@item.task_id</span>&nbsp;
                                </td>
                                <td data-order="@item.status">
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>

                                </td>
                                <td>
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>
                                <td>
                                    @*@{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }*@
                                    @(item.user == null?"Unassigned":item.user.firstname)
                                </td>
                                <td data-order="@item.priority">
                                    <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                                </td>
                                <td><small><label class="label label-@item.StatusDescLabel">@item.StatusDesc</label></small></td>
                                @if (!isBusiness)
                                {
                                    <td class="@(item.IsOverdue?"red":"")">
                                        @Html.DisplayFor(modelItem => item.due_date)
                                    </td>
                                    <td>@Html.Raw(item.OpenSince)</td>
                                }

                                <td data-order="@(item.HasAttachment?1:0)">
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>
                                <td>
                                    <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>

            </div>

            <div role="tabpanel" class="tab-pane" id="closed">
                <div class="gap"></div>
                <table class="table table-responsive table-condensed table-striped" id="tableclose" style="width:100%">

                    <thead>
                        <tr>
                            <th width="5%">
                                Id
                            </th>
                            <th></th>
                            <th></th>
                            <th class="title-col">Title</th>
                            <th>Owner</th>
                            <th>Opened</th>
                            <th>Closed</th>
                            <th>Days</th>

                            <th><span class="fa fa-paperclip"></span></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Where(x => x.status == 9))
                        {
                            <tr>
                                <td>
                                    <span class="text-muted fa-15x">@item.task_id</span>
                                </td>
                                <td>
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                </td>

                                <td data-order="@item.priority"><span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp;</td>
                                <td>
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>

                                <td>@item.user1.firstname</td>
                                <td>@item.created_on.Value.ToString("dd-MMM-yy")</td>
                                <td>@item.updated_on.Value.ToString("dd-MMM-yy")</td>
                                <td>@Html.Raw(item.TimeTaken)</td>

                                <td data-order="@(item.HasAttachment?1:0)">
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div role="tabpanel" class="tab-pane" id="openbyme">

                <div class="gap"></div>


                <table class="table table-condensed table-responsive table-striped" data-column-defs='[{"sortable": false, "targets": [7]}]' id="tableopenbyme" style="width:100%">

                    <thead>
                        <tr>
                            <th width="5%">
                                Id
                            </th>
                            <td></td>

                            <td class="title-col">
                                Title
                            </td>

                            <th width="20%">
                                Assigned
                            </th>
                            <th width="10%">
                                @Html.DisplayNameFor(model => model.priority)
                            </th>
                            <th width="14%">
                                Due On
                            </th>

                            <th style="width:30px;"><span class="fa fa-paperclip"></span></th>
                            <td style="width:30px;"><span class="fa fa-trash-o"></span></td>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Where(x => x.owner == session.Current.UserId && x.status != 9))
                        {
                            <tr>
                                <td>
                                    <span class="text-muted fa-15x">@item.task_id</span>
                                </td>
                                <td>
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                </td>

                                <td>
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>
                                <td>
                                    @*@{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }*@
                                    @(item.user==null?"Unassigned":item.user.firstname)
                                    
                                </td>
                                <td data-order="@item.priority">
                                    <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                                </td>
                                <td class="@(item.IsOverdue?"red":"")">
                                    @Html.DisplayFor(modelItem => item.due_date)
                                </td>


                                <td data-order="@(item.HasAttachment?1:0)">
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>
                                <td>

                                    <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>


            </div>

            <div role="tabpanel" class="tab-pane" id="recent">

                <div class="gap"></div>


                <table class="table  table-condensed table-responsive table-striped" id="tablerecent" style="width:100%">

                    <thead>
                        <tr>
                            <th width="5%">
                                Id
                            </th>
                            <td></td>

                            <td width="45%">
                                Title
                            </td>

                            <th width="10%">
                                Assigned
                            </th>
                            <th width="10%">
                                Updated By
                            </th>
                            <th width="10%">
                                @Html.DisplayNameFor(model => model.priority)
                            </th>


                            <th>Updated</th>
                            @if (!isBusiness)
                            {


                                <th width="14%">
                                    Due On
                                </th>

                                <th width="1%"></th>
                            }
                            <td></td>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in latest10)
                        {
                            <tr>
                                <td>
                                    <span class="text-muted fa-15x">@item.task_id</span>
                                </td>
                                <td>
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                </td>

                                <td>
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>
                                <td>
                                    @*@{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }*@
                                    @(item.user == null ? "Unassigned" : item.user.firstname)
                                    
                                </td>
                                <td>@item.user2.firstname</td>
                                <td>
                                    <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                                </td>
                                @if (!isBusiness)
                                {
                                    <td>@Html.Raw(item.LastUpdatedSince)</td>
                                    <td class="@(item.IsOverdue?"red":"")">
                                        @Html.DisplayFor(modelItem => item.due_date)
                                    </td>
                                }


                                <td>

                                    <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>

                                </td>
                                <td>
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>

            <div role="tabpanel" class="tab-pane" id="searched">

                <div class="gap"></div>
                @if (session.Current.searchFilter != null)
                {
                    @:&nbsp;&nbsp;Keyword: <b>@session.Current.searchFilter.keywords</b> (<a href="@Url.Action("ClearFilter")">clear</a>)
                    <input type="hidden" id="highlightme" value="@session.Current.searchFilter.keywords" />
                }

                <div id="searchtext">
                    <table class="table  table-condensed table-responsive table-striped" id="tablesearched" style="width:100%">

                        <thead>
                            <tr>
                                <th width="5%">
                                    Id
                                </th>
                                <td></td>

                                <td width="45%">
                                    Desc
                                </td>

                                <th width="20%">
                                    Assigned
                                </th>
                                <th width="10%">
                                    @Html.DisplayNameFor(model => model.priority)
                                </th>

                                @if (!isBusiness)
                                {
                                    <th width="14%">
                                        Due On
                                    </th>

                                    <th width="1%"></th>
                                }

                                <td></td>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.Where(x => x.IsFilteredOn).ToList())
                            {
                                <tr>
                                    <td>
                                        <span class="text-muted fa-15x">@item.task_id</span>
                                    </td>
                                    <td>
                                        <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                    </td>

                                    <td>
                                        <div class="readmore">
                                            <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                        </div>

                                    </td>
                                    <td>
                                        @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                        @assignee
                                    </td>
                                    <td>
                                        <span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp; <span class="text-muted">@Html.DisplayFor(modelItem => item.PriorityDesc)</span>
                                    </td>
                                    @if (!isBusiness)
                                    {
                                        <td class="@(item.IsOverdue?"red":"")">
                                            @Html.DisplayFor(modelItem => item.due_date)
                                        </td>
                                        <td></td>
                                    }


                                    <td>

                                        <a href="@Url.Action("DeleteTask", new {  id = item.task_id})"><span class="fa fa-trash"></span> </a>

                                    </td>
                                    <td>
                                        <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>

            <div role="tabpanel" class="tab-pane" id="notified">
                <div class="gap"></div>
                <table class="table" id="tablenotification" style="width:100%">

                    <thead>
                        <tr>
                            <th width="5%">
                                Id
                            </th>
                            <td></td>

                            <td width="45%">
                                Title
                            </td>
                            <td>
                            <th width="20%">From</th>
                            <th width="20%">
                                Assigned
                            </th>

                            @if (!isBusiness)
                            {
                                <th width="14%">
                                    Due On
                                </th>

                                <th></th>
                            }


                            <td></td>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Where(x => x.isInNotificationList).OrderByDescending(x => x.updated_on))
                        {
                            <tr>
                                <td>
                                    <span class="text-muted fa-15x">@item.task_id</span>
                                </td>
                                <td>
                                    <span style="padding:7px 2px;" class="label label-@(item.StatusDescLabel)" data-toggle="tooltip" data-placement="left" title="@item.TypeDesc - @item.StatusDesc"><span style="font-size:1.5em" class="fa fa-fw fa-@(item.typeIcon)"></span></span>
                                </td>

                                <td>
                                    <div class="readmore">
                                        <a href="@Url.Action("EditTask", new { id = item.task_id })">@Html.DisplayFor(modelItem => item.title)</a> (@item.TypeDesc)
                                    </div>

                                </td>
                                <td><span class="fa fa-circle color-@item.PriorityDesc.ToLower()"></span>&nbsp;</td>

                                <td>
                                    @if (item.notifications.Count > 0)
                                    {
                                        @item.notifications.OrderByDescending(x => x.sent_on).FirstOrDefault().sender_firstname
                                    }
                                </td>
                                <td>
                                    @{ var assignee = item.user.user_id == 0 ? "Unassigned" : item.user.firstname; }
                                    @assignee
                                </td>
                                @if (!isBusiness)
                                {
                                    <td>
                                        @Html.DisplayFor(modelItem => item.due_date)
                                    </td>
                                    <td>@*@Html.Raw(item.TimeTaken)*@</td>
                                }


                                <td>
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div role="tabpanel" class="tab-pane" id="info">
                <div class="gap"></div>
                <table class="table" id="tableinfo" style="width:100%">

                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>

                            <th width="45%">
                                Title
                            </th>

                            <th>
                                Opened on
                            </th>

                            <th>Updated by</th>
                            <th>Updated on</th>
                            <th>Importance</th>

                            <td></td>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in infoitems.OrderBy(i => i.importance))
                        {
                            <tr>
                                <td>
                                    <span class="text-muted fa-15x">@item.information_id</span>
                                </td>
                                <td>
                                    <span class="fa fa-15x fa-info-circle color-@item.ImportanceDesc.ToLower()"></span> <a href="@Url.Action("ShowInfo", new { id = item.information_id })">@item.title</a>
                                </td>
                                <td>@item.created_on.Value.ToString("dd MMM yyyy HH:mm") </td>

                                <td>@item.user.firstname</td>

                                <td>@item.updated_on.Value.ToString("dd MMM yyyy HH:mm")</td>

                                <td><span class="fa fa-circle color-@item.ImportanceDesc.ToLower()"></span>&nbsp; @item.ImportanceDesc</td>

                                <td>
                                    <span class="fa fa-@(item.HasAttachment?"paperclip":"")"></span>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        }
        

    </div>

</div>




@section scripts {
 
    @*@Scripts.Render("~/bundles/datatables")*@

    <script src="@Url.Content("~/Scripts/plugins/datatables.min.js")"></script> 
    
    @Scripts.Render("~/bundles/highlight")

    <script>
        $(document).ready(function () {

            //on loading checks if a saved tab (from localStorage) exists
            if (Modernizr.localstorage) {
                var localData = window.localStorage;
                var custTab = localData.getItem("Tab");
                if (custTab)
                {
                    $('.nav-tabs a[href="' + custTab + '"]').tab('show');
                }
            }

            var wordtohighlight = $('#highlightme').val();
            $(".highlight").css({ backgroundColor: "#FFFF88" });

            if (wordtohighlight) {
                var fields = wordtohighlight.split(' ');
                fields.forEach(function (entry) {
                    $('#searched').highlight(entry);
                });
            }
            
            //when tabs are changed, the value is saved in local storage to be re-used when reloading the page
            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                var target = $(e.target).attr("href") // activated tab
                //alert(target);
                if (Modernizr.localstorage) {
                    var localCustomerProfile = window.localStorage;
                    localCustomerProfile.setItem("Tab", target);
                }
            });

            

            var welcome = 'welcome back ' + '@session.Current.Firstname' + '!';
            
            @if(session.count==1)
            {
                @: $.notify(welcome, "success");
            }           


            $.notify.addStyle('happyblue', {
                html: "<div>☺<span data-notify-text/>☺</div>",
                classes: {
                    base: {
                        "white-space": "nowrap",
                        "background-color": "lightblue",
                        "padding": "5px",
                    },
                    gradientblue: {
                    
                       "background-color": "#3c8dbc !important",
                       "background-color": "-webkit-gradient(linear, left bottom, left top, color-stop(0, #3c8dbc), color-stop(1, #67a8ce)) !important",
                       "background-color": "-ms-linear-gradient(bottom, #3c8dbc, #67a8ce) !important",
                       "background-color": "-moz-linear-gradient(center bottom, #3c8dbc 0%, #67a8ce 100%) !important",
                       "background-color": "-o-linear-gradient(#67a8ce, #3c8dbc) !important",
                       "filter": "progid:DXImageTransform.Microsoft.gradient(startColorstr='#67a8ce', endColorstr='#3c8dbc', GradientType=0) !important",
                        "color": "#fff",
                    },
                    superblue: {
                        "color": "white",
                        "background-color": "blue"
                    }
                }
            });

            $('body').on('click', '.notify', function () {
                $.notify(
                'Are you looking for Facebook UI features, \this post will explain you how to create a Facebook style notifications popup using Jquery, HTML and CSS, you will understand how CSS elements will helps to improve better web design.\n This is the most needed feature for social networking web projects to minimize and enrich the UX elements.',
                {
                    className: 'gradientblue',
                    // whether to hide the notification on click
                    clickToHide: false,
                    // whether to auto-hide the notification
                    autoHide: false,
                    // if autoHide, hide after milliseconds
                    autoHideDelay: 5000,
                    // show the arrow pointing at the element
                    arrowShow: true,
                    // arrow size in pixels
                    arrowSize: 5,
                    position: "bottom-right",
                    clickToHide: true,
                    className: 'info',
                    // show animation
                    showAnimation: 'slideDown',
                    // show animation duration
                    showDuration: 400,
                    // hide animation
                    hideAnimation: 'slideUp',
                    // hide animation duration
                    hideDuration: 200,
                    gap: 0
                }

                );
            });
            


            //$('td').highlight('MTP');


            $('#tablebusinessopen').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });

            $('#tablebusinessclosed').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });



            $('#tableopen').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });

            $('#tableclose').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });


            $('#tableme').DataTable({
                "pageLength": 50,
                "order": [[4, "desc"]]
            });


            $('#tableopenbyme').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });


            //});

            $('.chosen-select-multi').chosen({ width: "95%" });


            $('body').on('change', '.changeproject', function () {
                var project_id = $(this).val();
                //alert("Changing Project");


                // similar behavior as an HTTP redirect
                window.location.replace(getVirtualDir() + "Tasks/Tasklist/" + project_id);

                // similar behavior as clicking on a link
                //window.location.href = "http://stackoverflow.com";

            });

            $('[data-toggle="tooltip"]').tooltip();


            $('body').on('click', '.sendtestnotif', function () {

                $.ajax({
                    type: 'GET',
                    url: '/Tasks/SendTestNotif',
                  //  data: { id: mlaId },
                    cache: false,
                    success: function (result) {

                    }
                });

            });


            //$('.readmore').readmore({
            //    speed: 75,
            //    collapsedHeight: 40,
            //    lessLink: '<a href="#">Read less</a>'
            //});

            $('body').on('click', '.shownextsection', function () {

                $(this).next('section').toggle();
            });

            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                clearBtn: true
            });



        });
            </script>

    
        }

    


