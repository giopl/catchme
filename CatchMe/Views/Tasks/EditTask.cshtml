@model CatchMe.Models.task
@using session = CatchMe.Helpers.UserSession
@{
    ViewBag.Title = "Edit Task";

    var assignee = (Model.user == null) ? "Unassigned" : Model.user.fullname;

    bool notassigned = Model.user == null;

    var users = ViewBag.EmailTo as List<CatchMe.Models.user>;
}

<h2><span class="rectangle-big @Model.StateColor"></span> Edit Task #@Model.task_id - @Model.title <span class="label label-@(notassigned?"default":"info")">(@assignee)</span> </h2>
<h5 class="text-muted">@session.Current.CurrentProject - created by @Model.user1.fullname on @Model.created_on.Value.ToString("dd MMM yyyy HH:mm") </h5>

        <div class="row">
            <div class="col-md-8">
            

                <a href="#" class="showsection" data-sectionnum=".section1"><span class="fa fa-plus-circle"></span>&nbsp;Add Comment</a>&nbsp;|&nbsp;
                <a href="#" class="showsection" data-sectionnum=".section2"><span class="fa fa-envelope"></span>&nbsp;Notify </a>&nbsp;|&nbsp;
                <a href="#" class="showsection" data-sectionnum=".section3"><span class="fa fa-history"></span>&nbsp;History (@Model.task_hist.Count)</a>

            <br />
                <section style="display:none" class="section1">

                    @using (Html.BeginForm("CreateComment", "Tasks", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4><span class="fa fa-comment"></span> &nbsp;Comments</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <input type="hidden" name="task_id" value="@Model.task_id" />

        <div class="form-group">
            <label class="col-md-2">Title</label>
            <div class="col-md-10">
                <input type="text" class="form-control" name="title" placeholder="Title (optional)" />
            </div>
        </div>
        <div class="form-group">            
           <label class="col-md-2">Description
            <br /><br />
               <input type="submit" class="btn btn-info" value="save" />
            <br />
               <input type="reset" class="btn btn-link" id="closeAddComment" value="close" />
            </label>
               <div class="col-md-10">
                   <textarea name="description" id="area2" cols="20" rows="2" style="width:620px;height:200px" placeholder="comment"></textarea>
                </div>
        </div>


        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-center">
                <input type="submit" class="btn btn-danger" value="save" />
                <input type="reset" class="btn btn-default" id="closeAddComment" value="close" />
            </div>
        </div>*@
    </div>
                    }

</section>
                

                <section style="display:none" class="section2">
                    <h4><span class="fa fa-envelope"></span> &nbsp;Notifications</h4>
                    <hr />
                    @using (Html.BeginForm("NotifyUsers", "Tasks", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                    @Html.AntiForgeryToken()
                        <input type="hidden" name="task" value="@Model.task_id" />
                        <input type="hidden" name="project" value="@Model.project_id" />
                        <input type="checkbox" name="notify" value="999" /> @:All
                            foreach (var u in users.Where(u=>u.user_id !=0).ToList())
                            {
                                <input type="checkbox" name="notify" value="@u.user_id" />@:&nbsp;@u.fullname &nbsp;
                            }
                    
                    <input type="submit" class="btn btn-info" value="Notify" />
                    
                    }
                    <hr />
                </section>

                <section style="display:none" class="section3">
                    <h4><span class="fa fa-history"></span> &nbsp;Task History (@Model.task_hist.Count)</h4>

                    @foreach (var hist in Model.task_hist.OrderBy(x => x.created_on))
                    {
                        
                        <div style="float:left; height:40px; padding:5px;">
                            <small>@hist.created_on @hist.created_by</small> <span class="label label-info">@hist.StatusDesc</span> 
                        </div><div style="float:left" > <span class="fa fa-long-arrow-right"></span></div>

                        @*<small>@hist.created_on @hist.created_by</small><span class="label label-info">@hist.StatusDesc</span>  <span class="fa fa-long-arrow-right"></span>*@
                    }

                    <table class="table">
                        <tr>
                            <td>date</td>
                            <td>status</td>
                            <td>test</td>
                            <td>type</td>
                            <td>priority</td>
                            <td>severity</td>
                        </tr>
                        @foreach (var hist in Model.task_hist.OrderByDescending(x => x.created_on))
                        {
                            <tr>
                                <td>
                                    @hist.created_on
                                </td>
                                <td> @(hist.hist_status == 0 ? "Task Created > " : "") @hist.StatusDesc</td>

                                <td>@hist.TestStatusDesc</td>
                                <td>@hist.TypeDesc</td>
                                <td>@hist.PriorityDesc</td>
                                <td>@hist.SeverityDesc</td>
                            </tr>
                        }

                    </table>

                </section>


            @foreach (var comment in Model.comments.OrderByDescending(x=>x.created_on))
            {
                <div class="task-title">@comment.title - </div>
                <small>@comment.user.fullname on @comment.created_on.Value.ToString("dd MMM yyyy HH:mm")</small>
                <h4>
                    @Html.Raw(comment.description.Replace(Environment.NewLine, "<br/>"))                    
                </h4>
          <hr />

            }

            
   
                </div> <!-- fisrt col -->



            <div class="col-md-4">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.task_id)
                @Html.HiddenFor(model => model.project_id)
                @Html.HiddenFor(model => model.created_on)
                @Html.HiddenFor(model => model.created_by)
                @Html.HiddenFor(model => model.description)

                <div class="form-group pad20">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">

                        @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                </div>

    <div class="form-group pad20">
        @Html.LabelFor(model => model.assigned_to, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">

            @Html.DropDownList("assigned_to", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.assigned_to, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group  pad20">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group pad20">
        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">

            @Html.DropDownList("type", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group  pad20">
        @Html.LabelFor(model => model.initiator, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.initiator, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.initiator, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group pad20">
        @Html.LabelFor(model => model.priority, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.DropDownList("priority", null, htmlAttributes: new { @class = "form-control" })


            @Html.ValidationMessageFor(model => model.priority, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group pad20">
        @Html.LabelFor(model => model.complexity, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.DropDownList("complexity", null, htmlAttributes: new { @class = "form-control" })


            @Html.ValidationMessageFor(model => model.complexity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group  pad20">
        @Html.LabelFor(model => model.due_date, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.due_date, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.due_date, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group pad20">
        <div class="col-md-offset-4 col-md-8 text-center">

            <input type="submit" value="Save" class="btn btn-info" />
            <input type="reset" value="Reset" class="btn btn-default" />
        </div>
    </div>

}
        </div><!-- second col-->

    </div> <!--end row-->

        


<div>
    @Html.ActionLink("Back to List", "Index")
</div>






@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/nicedit")

    <script>

        bkLib.onDomLoaded(function () {

            //nicEditors.allTextAreas();
            new nicEditor({
                //  fullPanel: true,
                buttonList: ['fontSize', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'subscript', 'superscript', 'strikethrough', 'removeformat', 'indent', 'outdent', 'hr', 'forecolor', 'bgcolor']
            }).panelInstance('area2');
            //nicEditors.findEditor('myArea2');
        });

        $(document).ready(function () {

            $('body').on('click', '.showsection', function () {
                var section = $(this).data("sectionnum");
                
                $(section).toggle();


                //$(this).next('section'+'.'+x).toggle();
            });



            $('body').on('click', '#closeAddComment', function () {
                $(this).closest('section').hide();
            });

            

        });
    </script>
}
